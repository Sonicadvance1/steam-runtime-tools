#!/usr/bin/env groovy
/*
 * SPDX-License-Identifier: LGPL-2.1+
 *
 * Copyright Â© 2017-2018 Collabora Ltd
 *
 * This package is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This package is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this package.  If not, see
 * <http://www.gnu.org/licenses/>.
 */
@Library('steamos-ci') _

pipeline {
  options {
    timestamps()
    skipDefaultCheckout()
  }
  agent {
    label 'docker-slave'
  }
  environment {
    HOME="${env.WORKSPACE}"
    TMPDIR="${env.WORKSPACE}"
    PYTHONUNBUFFERED="1"
  }

  stages {
    stage ("pressure-vessel") {
      steps {
        sh '''
        git config --global user.name Jenkins
        git config --global user.email nobody@example.com
        '''
        checkoutCollaboraGitlab('steam/pressure-vessel', 'master', 'src')
        dir('src') {
          sh '''
          set -eu
          ./build-aux/git-version-gen .tarball-version > .tarball-version_
          mv .tarball-version_ .tarball-version
          '''
        }

        script {
          if (env.CI_DOCKER_REGISTRY_CRED == '') {
            dockerRegistryCred = null;
          }
          else {
            dockerRegistryCred = env.CI_DOCKER_REGISTRY_CRED;
          }

          docker.withRegistry("https://${env.CI_DOCKER_REGISTRY}", dockerRegistryCred) {
            docker.image("${env.CI_DOCKER_REGISTRY}/steamrt/sdk:scout").inside('--mount type=tmpfs,destination=/var/cache/apt/archives') {
              sh '''
              set -eu
              make -C src PYTHON=python3.5
              make -C src check PYTHON=python3.5
              '''
            }
          }

          /* Check for self-containedness by repeating relocatable-install.sh
           * in a somewhat minimal container. */
          docker.image('debian:buster-slim').inside() {
            sh '''
            set -eu
            cd src
            ./t/relocatable-install.sh
            '''
          }
        }

        archiveArtifacts 'src/pressure-vessel-*-bin.tar.gz'
        archiveArtifacts 'src/pressure-vessel-*-bin+src.tar.gz'
      }
    }
  }

  post {
    cleanup {
      deleteDir()
    }
  }
}
/* vim:set sw=2 sts=2 et: */
