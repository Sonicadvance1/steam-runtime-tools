include:
    - project: 'steam/steam-ci-pipeline'
      file: '/steam-gitlab-ci-common.yml'

    - project: 'steam/steam-ci-pipeline'
      file: '/steam-gitlab-ci-pipeline.yml'

variables:
    BUILD_IMAGE: docker.internal.steamos.cloud/steamrt/sdk:scout-latest
    STEAM_CI_USE_BINARIES_FROM: autopkgtest
    STEAM_CI_DEPENDENCIES: >-
        debhelper
        gtk-doc-tools
        libegl1-mesa-dev
        libgl1-mesa-dev
        libgles2-mesa-dev
        libglib2.0-dev
        libjson-glib-dev
        libx11-dev
        libxcomposite-dev
        meson

build:
    variables:
        BUILD_IMAGE: docker.internal.steamos.cloud/steamos/package-builder:buster

autopkgtest:
    script: |
        set -eux

        apt-get install -y --no-install-recommends \
        apt-utils \
        git \
        libdpkg-perl \
        procps \
        ${NULL+}

        diff -u /usr/share/perl5/Dpkg/Shlibs.pm debian/Shlibs.pm || :
        install -m644 debian/Shlibs.pm /usr/share/perl5/Dpkg/Shlibs.pm

        diff -u /usr/bin/dpkg-shlibdeps debian/dpkg-shlibdeps.pl || :
        install -m755 debian/dpkg-shlibdeps.pl /usr/bin/dpkg-shlibdeps

        tempdir="$(mktemp -d)"
        git clone --branch steam/for-ci https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.steamos.cloud/packaging/autopkgtest.git "$tempdir/autopkgtest"
        git clone --branch debian/buster https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.steamos.cloud/packaging/chardet.git "$tempdir/chardet"
        git clone --branch debian/buster https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.steamos.cloud/packaging/python-debian.git "$tempdir/python-debian"
        git clone --branch debian/buster https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.steamos.cloud/packaging/six.git "$tempdir/six"

        # autopkgtest doesn't like it if this is a pre-existing directory,
        # so don't pre-create it!
        set -- --output-dir="$(pwd)/debian/tmp/artifacts/autopkgtest"

        e=0

        # SteamRT 1 'spy' has python3.2 as its default python3 to avoid
        # breaking packages' builds, but also has python3.5 available.
        # We want to use that newer version. In everything else the
        # default Python is good enough.
        if python3 -c 'if __import__("sys").version_info < (3, 4): raise SystemExit(1)'; then
            # python3 >= 3.4
            PYTHON=python3
        else
            # python3 < 3.4, so assume scout and explicitly use python3.5
            PYTHON=python3.5
        fi

        case "$STEAM_CI_USE_BINARIES_FROM" in
            (build)
                set -- "$@" --no-built-binaries
                set -- "$@" debian/tmp/artifacts/build/*.deb
                ;;
        esac

        set -- "$@" debian/tmp/artifacts/build/*.dsc

        PYTHONPATH="$tempdir/chardet:$tempdir/python-debian/lib:$tempdir/six" \
        "$PYTHON" "$tempdir/autopkgtest/runner/autopkgtest" \
        "$@" -- null || e=$?

        case "$e" in
            (0|2|8)
                # OK: 0 means total success, 2 means at least one test
                # was skipped, 8 means all tests were skipped
                ;;
            (*)
                exit "$e"
                ;;
        esac
    artifacts:
        paths:
            - debian/tmp/artifacts/autopkgtest
