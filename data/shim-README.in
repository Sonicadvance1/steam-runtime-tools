# Processed by capsule-init-project. Everything before the first blank
# line is removed during processing.

This is a libcapsule based proxy library.

Its purpose is to allow a library (@TARGET@) to be loaded from a
foreign filesystem tree (usually /host, but configurable at compile
time) without exposing any other libraries from that tree to the
program using it.

You can export the symbols of more than one library via the proxy:
To do so, add a line containing the SONAME (libFOO.so.X)
of each extra library to shim/lib@LIB@.so.c.shared and rebuild.

You can also prevent a library from the foreign tree from being loaded
at all (at least as a result of being a dependency of @TARGET@).
To achieve this, add a line containing the SONAME (libFOO.so.X)
of the excluded library to shim/lib@LIB@.so.c.excluded and rebuild.

The generated library will have the same name as the main proxy target
(@TARGET@). You can control the exact version number (cf libfoo.x.y.z)
by setting CAPSULE_VERSION_@AMTARGET@ in Makefile.am

To make the generated library override dlopen() for callers outside the
capsule, pass --ext-dlopen to capsule-mkstublib by setting the
AM_CAPSULE_MKSTUBLIB_FLAGS variable in Makefile.am.

If libcapsule's standard implementations of that function
is not suitable, copy capsule/_ext_dlopen.h from libcapsule's
development files into shim/capsule/, modify it as necessary,
and add it to EXTRA_DIST in Makefile.am.

Similarly, if libcapsule's standard implementation of dlopen() for
callers inside the capsule is not suitable, copy and modify
capsule/_int_dlopen.h.
